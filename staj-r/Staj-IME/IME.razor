@page "/ime"

@layout Dashboard.Dashboard
@if (status != null)
{
	<staj_r.Staj_IME.Empty message="@status.message" />
	<br />
	<br />
	@switch (status.pageContent)
	{
		case pages.apply:
			<Apply_IME User="uwt"/>
			break;
		case pages.rating:
			<Rating_IME User="uwt" />
			break;
		case pages.report:
			<Report User="uwt"/>
			break;
	}
}


@inject ILocalStorageService localStore

@code {
	[Parameter]
	public UserWToken uwt { get; set; }
	private InternStdPagesController ispc = new InternStdPagesController();
	private Status status { get; set; }
	protected override async Task<Task> OnAfterRenderAsync(bool firstRender)
	{
		uwt = await UserController.detokenizeUserWToken(await localStore.GetItemAsStringAsync("user"));
		var resultOfMessage = await ispc.getStatus(uwt.token, internships.IME);
		if (resultOfMessage.isSuccess)
		{
			status = resultOfMessage.value;
		}
		return base.OnAfterRenderAsync(firstRender);
	}
}
