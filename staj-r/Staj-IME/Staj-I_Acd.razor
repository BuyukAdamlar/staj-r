@page "/staj_1_acd"
@namespace staj_r.Staj_IME
@layout Dashboard.Dashboard

<table class="table">
	<thead>
		<tr>
			<th>NUMARA</th>
			<th>İSİM</th>
			<th>SOYİSİM</th>
			<th>E-POSTA</th>
			<th>FİRMA</th>
			<th>DURUM</th>
			<th>DETAY</th>
			<th>ONAY</th>
		</tr>
	</thead>
	<tbody class="table-border-bottom-0">
		@for (int j = 0; j < students.Count; j++)
		{
			<tr class="table-default">
				<td><strong>@students[j].number</strong></td>
				<td>
					<ul class="list-unstyled users-list m-0 avatar-group d-flex align-items-center">
						<p><strong>@students[j].name</strong></p>
					</ul>
				</td>
				<td>
					<ul class="list-unstyled users-list m-0 avatar-group d-flex align-items-center">
						<p><strong>@students[j].surname</strong></p>
					</ul>
				</td>
				<td>
					<ul class="list-unstyled users-list m-0 avatar-group d-flex align-items-center">
						<p>@students[j].email</p>
					</ul>
				</td>
				<td>
					<ul class="list-unstyled users-list m-0 avatar-group d-flex align-items-center">
						<p>@students[j].firm</p>
					</ul>
				</td>
				<td>
					<ul class="list-unstyled users-list m-0 avatar-group d-flex align-items-center">
						<p>@students[j].status</p>
					</ul>
				</td>
				<td>
					<!--Burada ilk satırın son sütünü  başlıyor -->
					<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalToggle">Detay</button>
					@*                        <div class="mt-3">
				//Buraya detay gelecek
				</div>*@
				</td>
				<td>
					<button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#modalToggle">ONAYLA</button>
				</td>

				<!--Burada bitiyor-->
			</tr>
		}
	</tbody>
</table>

@inject ILocalStorageService localStore
@code {
	[Parameter]
	public UserWToken uwt { get; set; }
	List<studentDetails> students = new List<studentDetails>();
	InternPagesController ipc = new InternPagesController();

	protected override async Task<Task> OnAfterRenderAsync(bool firstRender)
	{
		uwt = await UserController.detokenizeUserWToken(await localStore.GetItemAsStringAsync("user"));
		var res = await ipc.getStudents(uwt.token, internships.StajI);
		if (res.isSuccess)
		{
			students = res.value;
			await InvokeAsync(StateHasChanged);
		}
		return base.OnAfterRenderAsync(firstRender);
	}

}
