@page "/stajR"
@inject ILocalStorageService localStore
@using staj_r.Dashboard
@namespace staj_r.Pages



@*Token kontrolleri yapılacak*@
@if (isTokenValid == false)
{
	@*Login'e yönlendiriliyor*@
	<Login/>
}
@if (isTokenValid == true)
{
	@*Dashboard'a yönlendiriliyor*@
	<h1>Dash gelmesi gerekiyor</h1>
	<Dashboard User=uwt/>

}
@if (isTokenValid == null)
{
	<h1>Loading...</h1>
}



@code {
	public bool? isTokenValid = null;

	public UserWToken uwt { get; set; }

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		try
		{
			Result<UserWToken> result = await new LoginContoller().checkTokenController(await localStore.GetItemAsStringAsync("token"));
			if (result.isSuccess)
			{
				uwt = result.value;
				isTokenValid = true;
			}
			else
			{
				isTokenValid = false;
			}
			//user = await lvd.tokenControl(await localStore.GetItemAsync<string>("token"));
		}
		catch
		{
			isTokenValid = false;
		}
		await InvokeAsync(StateHasChanged);
		if (firstRender) this.StateHasChanged();
	}

	//////////////   TOKEN OLUŞTURMA    ////////////////////
	/*
	async Task butcli()
		{
		await localStore.SetItemAsync("token","frankfurt");
	}
	*/
	///////////////////////////////////////////////////////
}
